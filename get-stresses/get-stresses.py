#!/usr/bin/python3
# -*- coding: utf-8 -*-

import unittest

def getExpectedTranscription(inp, style=1984, speed=0):
    '''Ця функція повертає очікувану транскрипцію
    @param input Вхідний рядок з наголосом, наприклад щаве!ль
    @param style Варіант вимови: 1984 (типове значення) - за словником
                 Погрібного. 2001 - за словником 2001-2003 років
    @param speed Швидкість мови. 0 - повільна; 1 - швидка.
    @returns Очікувану транскрипцію, наприклад шчаве!л\'
             Якщо існує декілька варіантів вимови, і вони відрізняються
             лише опціональною мʼякістю, вона береться у дужки (^')^
    '''
    return inp

class TestExpectedTranscription(unittest.TestCase):

    def performTest(self, tests):
        '''Викликає власно getExpectedTranscription з усіма можливими значеннями
           style і speed.
        @param tests Словник тестів. Ключ - параметр inp. Значення - якщо рядок,
                     то те, що має повернути getExpectedTranscription для будь-якого
                     значення решти параметрів. Якщо словник, має містити від двох до чотирьох
                     пари: ключ шифрує параметри style та speed. 'SD': S - або p (Погрібний),
                     або 2 (2001-2003); D - або п (повільно), або ш (швидко). Якщо вимова для
                     якихось пар однакова, можна ставити знак питання. Наприклад:
                     {
                        u'арти!стці': {
                            u'пп': u'арти!с\'ц\'і',
                            u'пш': u'арти!с\'ц\':і',
                            u'2?': u'арти!с\'ц\'і',
                        },
                        u'щаве!ль': u'шчаве!ль
                     }
        '''
        for i, o in tests.items():
            styles = (u'п', u'2')
            speeds = (u'п', u'ш')
            styleConvert = {u'п': 1984, u'2': 2001}
            speedConvert = {u'п': 0, u'ш': 1}
            values = {}
            if (isinstance(o, unicode)):
                for style in styles:
                    for speed in speeds:
                        values[style + speed] = o
            else:
                for key, val in o.items():
                    if key[0] == u'?':
                        for style in styles:
                            values[style + key[1]] = val
                    elif key[1] == u'?':
                        for speed in speeds:
                            values[key[0] + speed] = val
                    else:
                        values[key] = val
            self.assertEqual(len(values), 4, 'Помилка в тестах!!!')
            for key, val in values.items():
                params = {'inp': i, 'style': styleConvert[key[0]], 'speed': speedConvert[key[1]]}
                self.assertEqual(o, getExpectedTranscription(**params), (u'Вхідне слово: "' + params['inp'] + u'", стиль: ' + unicode(params['style']) + u", швидкість: " + unicode(params['speed'])).encode('utf-8'))

    def test_a_basic(self):
        pairs = {
            u'ша!пка': u'ша!пка',
        }
        self.performTest(pairs)

    def test_o_basic(self):
        pairs = {
            u'вода!': u'вода!',
            u'моту!зка': u'моу^ту!зка',
        }
        self.performTest(pairs)

    def test_o_complex(self):
        # не виявляє оу^ однокурсник, бордюр, рвонути, красоту
        pairs = {
            u'одноку!рсник': u'о*дноку!рсние^к',
            # Про слова іншомовного походжження словник 2001 не знає...
            #'бордю!р': 'борд\'ур',
            # Про це також...
            #'добу!ти': 'добу!ти',
        }
        self.performTest(pairs)

    def test_2001_o_before_stressed_i(self):
        # Увага! Це суперечить словнику Погрібного, проте так зроблено в словнику 2001
        pairs = {
            u'порі!г': u'поу^ріг'
        }
        self.performTest(pairs)

    def test_u_basic(self):
        pairs = {
            u'кугуа!р': u'кугуа!р',

            # у -> у~
            u'аудито!рія': u'ау~дито!рійа',
        }
        self.performTest(pairs)

    def test_i_basic(self):
        pairs = {
            u'дід': u'д\'ід',
            u'істо!та': u'істо!та',
        }
        self.performTest(pairs)

    def test_i_to_y_1(self):
        pairs = {
            u'і!ноді': u'і!и^ноді',
            u'і!нколи': u'і!и^нколи',
            u'і!нший': u'і!и^нший',
            u'і!нде': u'і!и^нде',
        }
        self.performTest(pairs)

    # Немає у 2001
#    def test_i_to_y_2(self):
#        pairs = {
#            'си!ній': 'си!н\'іи^й',
#            'си!нім': 'си!н\'ім',
#            'мої!ми': 'мойі!и^ми',
#            'мої!м': 'мойі!м',
#            'краї!на': 'крайі!и^на'
#        }
#        self.performTest(pairs)

    def test_e_basic(self):
        pairs = {
            u'сте!жка': u'сте!жка',
            u'епо!ха': u'епо!ха',
            u'по!ле': u'по!ле',
            u'верба!a': u'веи^рба!',
            u'прему!дрий': u'преи^му!дрий',
            u'перли!на': u'пеи^рли!на',
            u'неді!йсний': u'неи^ді!йсний',
        }
        self.performTest(pairs)

    def test_e_complex(self):
        pairs = {
            u'теплоте!хніка': u'те*плоте!хні\'іка',
            u'по!лем': u'поле!м',
            u'болезаспокі!йливий': u'бо*лезаспок\'і!йлие^вий',
            # 2001 не знає:
            #'вечі!рка': 'вие^ч`і!рка',
        }
        self.performTest(pairs)

    def test_e_to_yi(self):
        pairs = {
            u'за!єць': u'за!йі^ц\'',
        }
        self.performTest(pairs)

    def test_y_basic(self):
        pairs = {
            u'ти!хо': u'ти!хо',
            u'жва!вий': u'жва!вий',
            u'прийти!': u'прийти!',
            u'до!брих': u'до!брих',
            u'роби!ти': u'роби!ти',
            u'сидимо!': u'сие^дие^мо!',
            # 2001 не знає:
            #'виде!лка': 'веи^де!лка',
        }
        self.performTest(pairs)

    def test_y_complex(self):
        pairs = {
            u'широкоря!дна': u'ши*рокор`а!дна',
            u'пʼятиде!нний': u'пйатие^де!н:ий',
        }
        self.performTest(pairs)

    def test_h_to_kh(self):
        pairs = {
            u'ле!гкість': u'ле!хкість',
            u'сніг': u'сн\'іг',
        }
        self.performTest(pairs)

    def test_w(self):
        pairs = {
            u'барв': u'барв',
            u'вплив': u'у~плиу~',
            u'вино!': u'вино!',
        }
        self.performTest(pairs)

    def test_z(self):
        pairs = {
            u'зціли!ти': u'с\'ц\'іли!ти',
            u'ка!зка': u'ка!зка',
            #u'розказа!ти': (u'розказа!ти', u'росказа!ти'),
            #u'безпе!ка': (u'беи^зпе!ка', u'беи^спе!ка'),
            # 2001!
            u'розси!пати': u'рос:и!пати',
        }
        self.performTest(pairs)

    def test_odzvinchennia(self):
        pairs = {
            u'боротьба!': u'бород\'ба!',
            u'вокза!л': u'воґза!л',
        }
        self.performTest(pairs)

    def test_dz_dzh(self):
        pairs = {
            u'джерело!': u'ДЖерело!',
            u'дзеркало!': u'ДЗеркало!',
            # Не в 2001:
            #'віджима!ти': 'в`іДЖжима!ти',
            #'підзві!тний': 'піДЗзв`і!тний'
        }
        self.performTest(pairs)

    def test_mjakyj(self):
        pairs = {
            u'лі!кар': u'л\'і!кар',
            u'блок': u'блок',

            u'ба!лка': u'ба!лка',
            u'сип': u'сип',
            u'верф': u'верф',
            u'ма!ма': u'ма!ма',
            u'біб': u'б`іб',
            u'під': u'п`ід',
            u'він': u'в`ін',
            u'мій': u'м`ій',
            u'фігура': u'ф`ігура',

            u'ги!чка': u'ги!чка',
            u'кит': u'кит',
            u'хи!трий': u'хи!трий',
            u'ґа!ва': u'ґа!ва',
            u'гі!рко': u'г`і!рко',
            u'хі!ба': u'х`і!ба',
            u'ле!ґінь': u'ле!ґ`ін\'',

            u'ча!ша': u'ча!ша',
            u'джем': u'ДЖем',
            u'шар': u'шар',
            u'жах': u'жах',
            u'о!чі': u'о!ч`і',
            u'ло!джія': u'ло!ДЖ`ійа',
            u'ші!сть': u'ш`іст\'',
            u'жі!нка': u'ж`і!нка',

            u'пала!ц': u'пала!ц',
            u'ціпо!к': u'ц\'іпок',

            u'ра!нок': u'ра!нок',
            u'рі!чка': u'р`ічка',

            u'дар': u'дар',
            u'та!нок': u'та!нок',
            u'нара!да': u'нара!да',
            u'заграва': u'заграва',
            u'сон': u'сон',
            u'дзе!ркало': u'ДЗе!ркало',
            u'дід': u'д\'ід',
            u'тінь': u'т\'ін\'',
            u'ніч': u'н\'іч',
            u'зір': u'з\'ір',
            u'сім': u'с\'ім',
            u'дзьоб': u'ДЗ\'об',
        }
        self.performTest(pairs)

    def test_tverdyj_pered_i(self):
        pairs = {
            u'безіме!нний': u'беи^з(^\')^іме!н:й',
            u'педінститу!т': u'пе*дінстие^ту!т',
        }
        self.performTest(pairs)

    def test_mjakist_podvijna(self):
        pairs = {
            # Згідно з орфоепічним словником Погрібного, приголосні з групи (з с ДЗ ц н л д т)
            # помʼякшуються перед приголосним з тієї ж групи ...

            u'галу!ззя': u'галу!з\':а',
            u'зале!жся': u'зале!з\'с\'а',
            u'їздці!в': u'йіз\'ДЗ\'ц\'іу~',
            u'ни!зці': u'ни!з\'ц\'і',
            u'зліт': u'з\'л\'іт',
            u'зді!бний': u'з\'д\'і!бний',
            u'вро!зтіч': u'у~ро!з\'т\'іч',
            u'коло!сся': u'коло!с\':а',
            u'ка!сці': u'ка!с\'ц\'і',
            u'весля!р': u'вес\'л\'яр',
            u'ємні!сть': u'йеи^мні!с\'т\'',
            u'наддзьо!бок': u'наДЗ\':о!бок',
            u'пфа!льцський': u'пфа!л\'ц\'с\'кий',
            u'ворі!тця': u'ворі!т\'ц\'а',
            u'мі!цність': u'мі!ц\'н\'іс\'т\'',
            u'ги!цля': u'ги!ц\'л\'а',
            u'горте!нзія': u'горте!н\'з\'ійа',
            u'ано!нсів': u'ано!н\'с\'іу~',
            u'ланцю!г': u'ла!н\'ц\'у!г',
            u'змага!ння': u'змага!н\':а',
            # нл' згідно 2001-2003
            u'фінля!ндський': u'фінл\'а!н\'д\'с\'кий',
            u'інді!йка': u'ін\'ді!йка',
            u'підґру!нтя': u'підґру!н\'т\'а',
            # крім заволзький; майже всюди мʼякий знак
            u'та!волзі': u'та!вол\'з\'і',
            # Знайшов лише кочержилні й рогачилні (решта з мʼяким знаком)
            u'кочержи!лні': u'кочеи^ржи!л\'н\'і',
            u'ллє!ться': u'л\':е!ц\':а',
            # крім мілдью
            u'фа!лді': u'фа!л\'д\'і',
            # Надзвичайно дивний словник:
            # л помʼякшується в балтієць балтійський ґвалті ґвалтівник збольтіть кшталті шталті
            # проте не помʼякшується в болті болтів ґвалтівни!й прибалті!йський
            # Ну як так можна?..
            u'ба!лтієць': u'ба!л\'т\'ійец\'',
            u'дні': u'д\'н\'і',
            # д перед л декілька опціонально: задля, підл* ще декілька;
            # Чомусь в "для" "д" твердий
            u'відлік': u'відлік',
            #+дд правосуддя
            u'су!ддя': u'су!д\':а',
            # опціонально в "підт"
            u'звідтіля!': u'з\'в\'ід\'т\'іл\'а!',
            # Теоретично т'c' має переходити в ц':
            # Проте в словнику 2001-2013 для слова вʼяляться чомусь зроблено виняток...
            u'вʼяля!ться': u'вйал\'а!т\'с\'а',
            u'тлі!ти': u'т\'л\'!іти',
            u'життя!': u'жит\':а!',

            # Також словник 2001-2003 у "зн", "сн" і "тн"
            # ставить опціональне помʼякшення ...

            u'ку!зня': u'ку!з(^\')^н\'а',
            u'сніг': u'с(^\')^н\'іг',
            u'пу!тній': u'пу!т(^\')^н\'ій',

            # ... А в цт, лц, нДЗ не помʼякшує зовсім.

            u'о!цті': u'о!цт\'і',
            u'гі!лці': u'г`і!лц\'і',

            # немає в словнику: сз, сДЗ, сд, ДЗз, ДЗс,
            # ДЗн, ДЗл, ДЗд, ДЗт, цз, цДЗ, цд, лс (всюди мʼякий знак),
            # лДЗ (всюди мʼякий знак), дз, дс, дДЗ, дц, тз, тДЗ,
            # тц (обротьці), тд
        }
        self.performTest(pairs)

    def test_mjakist_vidminky(self):
        # д т з с перед кінцевим мʼяким основи прикметників твердої...
        pairs = {
            u'наро!дні': u'наро!д(^\')^н\'і',
            u'па!мʼятні': u'па!мйат(^\')^н\'і',
            u'о!бразні': u'о!браз(^\')^н\'і',
            # Словник 2001-2003 вважає, що тут помʼякшувати необхідно:
            u'барви!сті': u'барви!с\'т\'і',
        }
        self.performTest(pairs)

    def test_2001_zscDZ_before_hubni(self):
        # Згідно зі словником Погрібного,
        # з ц с ДЗ перед напівпомʼякшеними губними можуть помʼякшуватися.
        # Словник 2001-2003 про це згадує в передмові (10 сторінка), проте
        # в транскрипціях не ставить навіть опціональної можливості...
        # зб - збіг (у Погрібного теж не помʼякшується)
        # зв - звір (у Погрібного мʼяке з, проте далеко не всюди)
        # зм - зміна (у Погрібного теж не помʼякшується)
        # сб - лесбіянка (У Погрібного не помʼякшується, а в 2001 чомусь не одзвінчилося...)
        # сп - аспід (у Погрібного не помʼякшується)
        # св - свято, світ (у Погрібного помʼякшується всюди крім свій)
        # см - сміх
        # сф - сфінкс (у Погрібного не помʼякшується)
        # ДЗв - ДЗвін (у Погрібного теж не помʼякшується, крім дзвякнути)
        # цв - цвях

        # немає наступних пар:
        # зф цб цм цф ДЗб ДЗп ДЗф
        # зп (тільки префікс)
        # цп (спецпідготовка)
        # ДЗм (підзміна)

        pairs = {
            u'збіг': u'зб`іг',
            u'звір': u'зв`ір',
            u'зміна': u'зм`іна',
            u'лесбія!нка': u'леи^сб`ійа!нка',
            u'а!спід': u'а!сп`ід',
            u'свято': u'св`ато',
            u'сміх': u'см`іх',
            u'сфінкс': u'сф`інкс',
            u'дзвін': u'ДЗв`ін',
            u'цвях': u'цв`ах',
        }
        self.performTest(pairs)

    def test_prefix_pomjakshennia(self):
        pairs = {
            # Тут мене починає переслідувати відчуття, що 2001-2003 просто
            # знущається. "безьдіяльний"?.. Але "сцідити"?..

            # Зубні в кінці префікса перед мʼякими зубними
            # звичайно не помʼякшуються (2001 - навпаки)
            u'бездія!льний': u'беи^з\'д\'ійа!л\'ний',
            u'роздяга!ти': u'роз\'д\'ага!ти',
            u'розліні!яти': u'роз\'л\'ін\'і!йати',
            # 2001
            u'розсі!яти': u'рос\':і!йати',
            # виняток
            u'роззя!вити': u'роз\':а!вие^ти',
            # Помʼякшуються тільки префіксальний д перед д' т' н'
            u'відділи!ти': u'в`ід\':іли!ти',
            u'надті!сувати': u'над\'т\'і!сувати',
            # 2001 вважає опціональним
            u'підніма!ти': u'п\'ід(^\')^н\'іма!ти',
            # Також ДЗ с перед с' ц' (2001 проти помʼякшення перед с)
            u'підсі!сти': u'п\'іДЗс\'і!сти',
            u'відціля!': u'в`іДЗ\'ц\'іл\'а!',
            # І з перед c' ц'
            u'зсі!кти': u'c\':і!кти',
            u'зцілити': u'c\'ц\'ідие^ти',
            # Та префікс с перед т'
            u'стя!гти': u'с\'т\'а!гти',
        }
        self.performTest(pairs)

    def test_simple_podovzhennia(self):
        pairs = {
            u'знання!': u'знан\':а!',
            u'обби!ти': u'об:и!ти',
        }
        self.performTest(pairs)

    def test_assimilations(self):
        pairs = {
            u'ви!рісши': u'ви!р`іш:и',
            u'ви!візши': u'ви!в`іжши',
            u'зши!ти': u'ш:и!ти',
            u'зжо!вкнути': u'ж:о!у~кнути',
            u'безжа!лісний': u'беж:а!л\'існий',
            u'безче!сний': u'бежче!сний',
            u'зчи!стити': u'шчи!стие^ти',
            u'милу!єшся': u'милу!єc\':а',
            u'зва!жся': u'зва!з\'с\'а',
            u'моро!чся': u'моро!ц\'с\'а',
            u'до!шці': u'до!c\'ц\'і',
            u'сму!жці': u'сму!з\'ц\'і',
            u'ху!сточці': u'ху!стоц\':і',
            u'ві!дступ': u'в`і!ДЗступ',
            u'відцура!тися': u'в`іДЗцура!тис\'а',
            u'відшліфува!ти': u'в`іДЖшл\'іфува!ти',
            u'відчини!ти': u'в`іДЖчие^ни!ти',
            u'віджива!ти': u'в`іДЖжие^ва!ти',
            u'ві!дзвук': u'в`і!ДЗзвук',
            u'бра!тство': u'бра!цтво',
            u'кори!тце': u'кори!ц:е',
            #u'бага!тшати': ('бага!чшати', u'бага!ч:ати'),
            u'квітчати': u'кв`іч:ати',
        }
        self.performTest(pairs)

    def test_assimilations_across_words(self):
        pairs = {
            u'з джерела!': u'ж ДЖерела!',
            u'ваш сінокі!с': u'ваш с\'інок\'і!с',
            u'де ж сі!сти': u'де ж с\'і!сти',
            u'підко!рувач ці!лий': u'п\'ідко!рувач ц\'і!лий',
        }
        self.performTest(pairs)

    def test_simplifications(self):
        pairs = {
            u'студе!нтський': u'студе!н\'с\'кий',
            #u'тури!стський': ('тури!с\'кий', u'тури!с\':кий'),
            u'аге!нтство': u'аге!нство',
            #u'арти!стці': ('арти!с\'ц\'і', u'арти!с\'ц\':і'),
            u'неві!стчин': u'неи^в`і!шчие^н',
            u'шістде!сят': u'ш`іздеи^с\'а!т',
            u'шістсо!т': u'ш`і!с:о!т',
        }
        self.performTest(pairs)

    def test_chn_exceptions(self):
        pairs = {
            u'со!нячний': u'со!н\'ашний',
            u'я!чні': u'йа!шн\'і',
            u'смачни!й': u'смачни!й',
            u'яє!чня': u'йайе!шн\'я',
            u'пшини!чний': u'пшие^ни!шний',
            u'моло!чний': u'моло!шний',
        }
        self.performTest(pairs)

    def test_double(self):
        pairs = {
            u'щаве!ль': u'шчаве!л\'',

            u'ярмо!': u'йармо!',
            u'ю!шка': u'йу!шка',
            u'єди!ний': u'йеи^ди!ний',
            u'їжа!к': u'йіжа!к',

            u'вʼя!з': u'вйа!з',
            u'вʼюно!к': u'вйуно!к',
            u'відʼє!мний': u'в`ідйе!мние^й',
            u'підʼїзд': u'п\'ідйізд',

            u'князь': u'кн\'аз\'',
            u'люсте!рко': u'л\'усте!рко',
            u'си!нє': u'си!н\'е',
        }
        self.performTest(pairs)

if __name__ == '__main__':
    unittest.main()
